version: '3.5'

services:
  cron-service:
    image: ghcr.io/sborys00/taxi-simulator:latest
    container_name: taxi
    ports:
      - "8081:8081"
    environment:
      - TZ=Europe/Warsaw
      - PYTHONUNBUFFERED=1
    volumes:
      - ${WEBAPP_STORAGE_HOME}/simulator/logs:/logs
      - ${WEBAPP_STORAGE_HOME}/certs/client/client.key:/certs/client.key:ro
      - ${WEBAPP_STORAGE_HOME}/certs/client/client.pem:/certs/client.pem:ro
      - ${WEBAPP_STORAGE_HOME}/certs/ca/ca.pem:/certs/ca.pem:ro
    depends_on:
      - mqtt

  mqtt:
    image: eclipse-mosquitto
    ports:
      - 8443:8443
    volumes:
      - ${WEBAPP_STORAGE_HOME}/simulator/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ${WEBAPP_STORAGE_HOME}/certs/ca/ca.pem:/certs/ca.pem:ro
      - ${WEBAPP_STORAGE_HOME}/certs/broker/broker.pem:/certs/broker.pem:ro
      - ${WEBAPP_STORAGE_HOME}/certs/broker/broker.key:/certs/broker.key:ro

  postgres:
    image: timescale/timescaledb:latest-pg15
    restart: always
    environment:
      - POSTGRES_PASSWORD=taxi
      - POSTGRES_USER=taxi
      - POSTGRES_DB=testowa_baza
    ports:
      - 5432:5432
    volumes:
      - ${WEBAPP_STORAGE_HOME}/data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    image: ghcr.io/sborys00/taxi-backend:latest
    command: >
      sh -c "python3 manage.py makemigrations taxi_backend &&
             python3 manage.py makemigrations &&
             python3 /app/manage.py migrate &&
             python3 /app/manage.py loaddata /app/taxi_backend/seed/*.json &&
             python3 /app/manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - ${WEBAPP_STORAGE_HOME}/certs/backend/backend.key:/certs/backend.key:ro
      - ${WEBAPP_STORAGE_HOME}/certs/backend/backend.pem:/certs/backend.pem:ro
      - ${WEBAPP_STORAGE_HOME}/certs/ca/ca.pem:/certs/ca.pem:ro

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy

networks:
  default:
    name: shared-network