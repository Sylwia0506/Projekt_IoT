version: '3.5'

services:
  cron-service:
    image: ghcr.io/sborys00/taxi-simulator:latest
    container_name: taxi
    ports:
      - "8081:8081"
    environment:
      - TZ=Europe/Warsaw
      - PYTHONUNBUFFERED=1
    volumes:
      - ${WEBAPP_STORAGE_HOME}/simulator/logs:/logs
      - ${WEBAPP_STORAGE_HOME}/certs/client/client.key:/certs/client.key
      - ${WEBAPP_STORAGE_HOME}/certs/client/client.pem:/certs/client.pem
      - ${WEBAPP_STORAGE_HOME}/certs/ca/ca.pem:/certs/ca.pem

  mqtt:
    image: eclipse-mosquitto
    ports:
      - "8443:8443"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/simulator/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ${WEBAPP_STORAGE_HOME}/certs/ca/ca.pem:/certs/ca.pem
      - ${WEBAPP_STORAGE_HOME}/certs/broker/broker.pem:/certs/broker.pem
      - ${WEBAPP_STORAGE_HOME}/certs/broker/broker.key:/certs/broker.key

  postgres:
    image: timescale/timescaledb:latest-pg15
    restart: always
    environment:
      - POSTGRES_PASSWORD=taxi
      - POSTGRES_USER=taxi
      - POSTGRES_DB=testowa_baza
    ports:
      - "5432:5432"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/data:/var/lib/postgresql

  web:
    image: ghcr.io/sborys00/taxi-backend:latest
    command: >
      sh -c "/app/run.sh"
    ports:
      - "80:80"
    environment:
      - DJANGO_ALLOWED_HOST=${DJANGO_ALLOWED_HOST}
    restart: always
    volumes:
      - ${WEBAPP_STORAGE_HOME}/certs/backend/backend.key:/certs/backend.key
      - ${WEBAPP_STORAGE_HOME}/certs/backend/backend.pem:/certs/backend.pem
      - ${WEBAPP_STORAGE_HOME}/certs/ca/ca.pem:/certs/ca.pem

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     postgres:
  #       condition: service_healthy